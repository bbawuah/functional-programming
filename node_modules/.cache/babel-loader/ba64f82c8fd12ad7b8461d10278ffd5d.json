{"ast":null,"code":"var _jsxFileName = \"/Users/brianbawuah/Documents/dev/dataviz/src/theme/ThemeProvider.tsx\";\nimport React, { useState } from 'react';\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { getThemeByName } from './base';\nexport const ThemeContext = React.createContext(themeName => {});\n\nconst ThemeProvider = props => {\n  const [themeName, _setThemeName] = useState('lightTheme');\n  const theme = getThemeByName(themeName);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: _setThemeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, props.children));\n};\n\nexport default ThemeProvider;","map":{"version":3,"sources":["/Users/brianbawuah/Documents/dev/dataviz/src/theme/ThemeProvider.tsx"],"names":["React","useState","MuiThemeProvider","getThemeByName","ThemeContext","createContext","themeName","ThemeProvider","props","_setThemeName","theme","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,OAAO,MAAMC,YAAY,GAAGJ,KAAK,CAACK,aAAN,CAAqBC,SAAD,IAA6B,CAAG,CAApD,CAArB;;AAEP,MAAMC,aAAuB,GAAIC,KAAD,IAAW;AACvC,QAAM,CAACF,SAAD,EAAYG,aAAZ,IAA6BR,QAAQ,CAAC,YAAD,CAA3C;AAGA,QAAMS,KAAK,GAAGP,cAAc,CAACG,SAAD,CAA5B;AAEA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEG,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCF,KAAK,CAACG,QAAvC,CAFJ,CADJ;AAMH,CAZD;;AAcA,eAAeJ,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { getThemeByName } from './base';\n\nexport const ThemeContext = React.createContext((themeName: string): void => { })\n\nconst ThemeProvider: React.FC = (props) => {\n    const [themeName, _setThemeName] = useState('lightTheme');\n\n\n    const theme = getThemeByName(themeName);\n\n    return (\n        <ThemeContext.Provider value={_setThemeName}>\n\n            <MuiThemeProvider theme={theme}>{props.children}</MuiThemeProvider>\n        </ThemeContext.Provider>\n    )\n}\n\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}